/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_vector_5ftile_2eproto__INCLUDED
#define PROTOBUF_C_vector_5ftile_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _VectorTile__Tile VectorTile__Tile;
typedef struct _VectorTile__Tile__Value VectorTile__Tile__Value;
typedef struct _VectorTile__Tile__Feature VectorTile__Tile__Feature;
typedef struct _VectorTile__Tile__Layer VectorTile__Tile__Layer;


/* --- enums --- */

typedef enum _VectorTile__Tile__GeomType {
  VECTOR_TILE__TILE__GEOM_TYPE__UNKNOWN = 0,
  VECTOR_TILE__TILE__GEOM_TYPE__POINT = 1,
  VECTOR_TILE__TILE__GEOM_TYPE__LINESTRING = 2,
  VECTOR_TILE__TILE__GEOM_TYPE__POLYGON = 3
} VectorTile__Tile__GeomType;

/* --- messages --- */

struct  _VectorTile__Tile__Value
{
  ProtobufCMessage base;
  char *string_value;
  protobuf_c_boolean has_float_value;
  float float_value;
  protobuf_c_boolean has_double_value;
  double double_value;
  protobuf_c_boolean has_int_value;
  int64_t int_value;
  protobuf_c_boolean has_uint_value;
  uint64_t uint_value;
  protobuf_c_boolean has_sint_value;
  int64_t sint_value;
  protobuf_c_boolean has_bool_value;
  protobuf_c_boolean bool_value;
};
#define VECTOR_TILE__TILE__VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vector_tile__tile__value__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _VectorTile__Tile__Feature
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint64_t id;
  size_t n_tags;
  uint32_t *tags;
  protobuf_c_boolean has_type;
  VectorTile__Tile__GeomType type;
  size_t n_geometry;
  uint32_t *geometry;
};
#define VECTOR_TILE__TILE__FEATURE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vector_tile__tile__feature__descriptor) \
    , 0,0, 0,NULL, 0,VECTOR_TILE__TILE__GEOM_TYPE__UNKNOWN, 0,NULL }


struct  _VectorTile__Tile__Layer
{
  ProtobufCMessage base;
  uint32_t version;
  char *name;
  size_t n_features;
  VectorTile__Tile__Feature **features;
  size_t n_keys;
  char **keys;
  size_t n_values;
  VectorTile__Tile__Value **values;
  protobuf_c_boolean has_extent;
  uint32_t extent;
};
#define VECTOR_TILE__TILE__LAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vector_tile__tile__layer__descriptor) \
    , 1, NULL, 0,NULL, 0,NULL, 0,NULL, 0,4096 }


struct  _VectorTile__Tile
{
  ProtobufCMessage base;
  size_t n_layers;
  VectorTile__Tile__Layer **layers;
};
#define VECTOR_TILE__TILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vector_tile__tile__descriptor) \
    , 0,NULL }


/* VectorTile__Tile__Value methods */
void   vector_tile__tile__value__init
                     (VectorTile__Tile__Value         *message);
/* VectorTile__Tile__Feature methods */
void   vector_tile__tile__feature__init
                     (VectorTile__Tile__Feature         *message);
/* VectorTile__Tile__Layer methods */
void   vector_tile__tile__layer__init
                     (VectorTile__Tile__Layer         *message);
/* VectorTile__Tile methods */
void   vector_tile__tile__init
                     (VectorTile__Tile         *message);
size_t vector_tile__tile__get_packed_size
                     (const VectorTile__Tile   *message);
size_t vector_tile__tile__pack
                     (const VectorTile__Tile   *message,
                      uint8_t             *out);
size_t vector_tile__tile__pack_to_buffer
                     (const VectorTile__Tile   *message,
                      ProtobufCBuffer     *buffer);
VectorTile__Tile *
       vector_tile__tile__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   vector_tile__tile__free_unpacked
                     (VectorTile__Tile *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*VectorTile__Tile__Value_Closure)
                 (const VectorTile__Tile__Value *message,
                  void *closure_data);
typedef void (*VectorTile__Tile__Feature_Closure)
                 (const VectorTile__Tile__Feature *message,
                  void *closure_data);
typedef void (*VectorTile__Tile__Layer_Closure)
                 (const VectorTile__Tile__Layer *message,
                  void *closure_data);
typedef void (*VectorTile__Tile_Closure)
                 (const VectorTile__Tile *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor vector_tile__tile__descriptor;
extern const ProtobufCMessageDescriptor vector_tile__tile__value__descriptor;
extern const ProtobufCMessageDescriptor vector_tile__tile__feature__descriptor;
extern const ProtobufCMessageDescriptor vector_tile__tile__layer__descriptor;
extern const ProtobufCEnumDescriptor    vector_tile__tile__geom_type__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_vector_5ftile_2eproto__INCLUDED */
